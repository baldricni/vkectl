// Code generated by thriftgo (0.1.3). DO NOT EDIT.

package appserver

import (
	"fmt"
	"github.com/apache/thrift/lib/go/thrift"
	"github.com/volcengine/vkectl/pkg/model/app/kitex_gen/base"
	"strings"
)

type GetHorizontalPodAutoscalerResponse struct {
	ClusterId       string          `thrift:"ClusterId,1,required" json:"ClusterId"`
	Namespace       string          `thrift:"Namespace,2,required" from:"metadata.namespace"`
	Name            string          `thrift:"Name,3,required" from:"metadata.name"`
	Labels          []*KeyValuePair `thrift:"Labels,4,required" from:"metadata.labels"`
	Description     string          `thrift:"Description,5" from:"metadata.annotations.<description>"`
	CreateTime      string          `thrift:"CreateTime,6,required" from:"metadata.creationTimestamp"`
	LastScaleTime   string          `thrift:"LastScaleTime,7,required" from:"status.lastScaleTime"`
	ScaleTarget     string          `thrift:"ScaleTarget,8,required" json:"ScaleTarget"`
	Metrics         []string        `thrift:"Metrics,9,required" json:"Metrics"`
	CurrentMetrics  []string        `thrift:"CurrentMetrics,10,required" json:"CurrentMetrics"`
	MinReplicas     int32           `thrift:"MinReplicas,11" from:"spec.minReplicas"`
	MaxReplicas     int32           `thrift:"MaxReplicas,12,required" from:"spec.maxReplicas"`
	CurrentReplicas int32           `thrift:"CurrentReplicas,13,required" from:"status.currentReplicas"`
}

func NewGetHorizontalPodAutoscalerResponse() *GetHorizontalPodAutoscalerResponse {
	return &GetHorizontalPodAutoscalerResponse{

		ClusterId:       "",
		Namespace:       "",
		Name:            "",
		Description:     "",
		CreateTime:      "",
		LastScaleTime:   "",
		ScaleTarget:     "",
		MinReplicas:     0,
		MaxReplicas:     0,
		CurrentReplicas: 0,
	}
}

func (p *GetHorizontalPodAutoscalerResponse) GetClusterId() (v string) {
	return p.ClusterId
}

func (p *GetHorizontalPodAutoscalerResponse) GetNamespace() (v string) {
	return p.Namespace
}

func (p *GetHorizontalPodAutoscalerResponse) GetName() (v string) {
	return p.Name
}

func (p *GetHorizontalPodAutoscalerResponse) GetLabels() (v []*KeyValuePair) {
	return p.Labels
}

var GetHorizontalPodAutoscalerResponse_Description_DEFAULT string = ""

func (p *GetHorizontalPodAutoscalerResponse) GetDescription() (v string) {
	if !p.IsSetDescription() {
		return GetHorizontalPodAutoscalerResponse_Description_DEFAULT
	}
	return p.Description
}

func (p *GetHorizontalPodAutoscalerResponse) GetCreateTime() (v string) {
	return p.CreateTime
}

func (p *GetHorizontalPodAutoscalerResponse) GetLastScaleTime() (v string) {
	return p.LastScaleTime
}

func (p *GetHorizontalPodAutoscalerResponse) GetScaleTarget() (v string) {
	return p.ScaleTarget
}

func (p *GetHorizontalPodAutoscalerResponse) GetMetrics() (v []string) {
	return p.Metrics
}

func (p *GetHorizontalPodAutoscalerResponse) GetCurrentMetrics() (v []string) {
	return p.CurrentMetrics
}

var GetHorizontalPodAutoscalerResponse_MinReplicas_DEFAULT int32 = 0

func (p *GetHorizontalPodAutoscalerResponse) GetMinReplicas() (v int32) {
	if !p.IsSetMinReplicas() {
		return GetHorizontalPodAutoscalerResponse_MinReplicas_DEFAULT
	}
	return p.MinReplicas
}

func (p *GetHorizontalPodAutoscalerResponse) GetMaxReplicas() (v int32) {
	return p.MaxReplicas
}

func (p *GetHorizontalPodAutoscalerResponse) GetCurrentReplicas() (v int32) {
	return p.CurrentReplicas
}
func (p *GetHorizontalPodAutoscalerResponse) SetClusterId(val string) {
	p.ClusterId = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetNamespace(val string) {
	p.Namespace = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetName(val string) {
	p.Name = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetLabels(val []*KeyValuePair) {
	p.Labels = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetDescription(val string) {
	p.Description = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetCreateTime(val string) {
	p.CreateTime = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetLastScaleTime(val string) {
	p.LastScaleTime = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetScaleTarget(val string) {
	p.ScaleTarget = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetMetrics(val []string) {
	p.Metrics = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetCurrentMetrics(val []string) {
	p.CurrentMetrics = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetMinReplicas(val int32) {
	p.MinReplicas = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetMaxReplicas(val int32) {
	p.MaxReplicas = val
}
func (p *GetHorizontalPodAutoscalerResponse) SetCurrentReplicas(val int32) {
	p.CurrentReplicas = val
}

var fieldIDToName_GetHorizontalPodAutoscalerResponse = map[int16]string{
	1:  "ClusterId",
	2:  "Namespace",
	3:  "Name",
	4:  "Labels",
	5:  "Description",
	6:  "CreateTime",
	7:  "LastScaleTime",
	8:  "ScaleTarget",
	9:  "Metrics",
	10: "CurrentMetrics",
	11: "MinReplicas",
	12: "MaxReplicas",
	13: "CurrentReplicas",
}

func (p *GetHorizontalPodAutoscalerResponse) IsSetDescription() bool {
	return p.Description != GetHorizontalPodAutoscalerResponse_Description_DEFAULT
}

func (p *GetHorizontalPodAutoscalerResponse) IsSetMinReplicas() bool {
	return p.MinReplicas != GetHorizontalPodAutoscalerResponse_MinReplicas_DEFAULT
}

func (p *GetHorizontalPodAutoscalerResponse) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16
	var issetClusterId bool = false
	var issetNamespace bool = false
	var issetName bool = false
	var issetLabels bool = false
	var issetCreateTime bool = false
	var issetLastScaleTime bool = false
	var issetScaleTarget bool = false
	var issetMetrics bool = false
	var issetCurrentMetrics bool = false
	var issetMaxReplicas bool = false
	var issetCurrentReplicas bool = false

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
				issetClusterId = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
				issetNamespace = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 3:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
				issetName = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 4:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField4(iprot); err != nil {
					goto ReadFieldError
				}
				issetLabels = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 5:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField5(iprot); err != nil {
					goto ReadFieldError
				}
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 6:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField6(iprot); err != nil {
					goto ReadFieldError
				}
				issetCreateTime = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 7:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField7(iprot); err != nil {
					goto ReadFieldError
				}
				issetLastScaleTime = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 8:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField8(iprot); err != nil {
					goto ReadFieldError
				}
				issetScaleTarget = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 9:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField9(iprot); err != nil {
					goto ReadFieldError
				}
				issetMetrics = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 10:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField10(iprot); err != nil {
					goto ReadFieldError
				}
				issetCurrentMetrics = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 11:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField11(iprot); err != nil {
					goto ReadFieldError
				}
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 12:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField12(iprot); err != nil {
					goto ReadFieldError
				}
				issetMaxReplicas = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 13:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField13(iprot); err != nil {
					goto ReadFieldError
				}
				issetCurrentReplicas = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}

		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	if !issetClusterId {
		fieldId = 1
		goto RequiredFieldNotSetError
	}

	if !issetNamespace {
		fieldId = 2
		goto RequiredFieldNotSetError
	}

	if !issetName {
		fieldId = 3
		goto RequiredFieldNotSetError
	}

	if !issetLabels {
		fieldId = 4
		goto RequiredFieldNotSetError
	}

	if !issetCreateTime {
		fieldId = 6
		goto RequiredFieldNotSetError
	}

	if !issetLastScaleTime {
		fieldId = 7
		goto RequiredFieldNotSetError
	}

	if !issetScaleTarget {
		fieldId = 8
		goto RequiredFieldNotSetError
	}

	if !issetMetrics {
		fieldId = 9
		goto RequiredFieldNotSetError
	}

	if !issetCurrentMetrics {
		fieldId = 10
		goto RequiredFieldNotSetError
	}

	if !issetMaxReplicas {
		fieldId = 12
		goto RequiredFieldNotSetError
	}

	if !issetCurrentReplicas {
		fieldId = 13
		goto RequiredFieldNotSetError
	}
	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_GetHorizontalPodAutoscalerResponse[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
RequiredFieldNotSetError:
	return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field %s is not set", fieldIDToName_GetHorizontalPodAutoscalerResponse[fieldId]))
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.ClusterId = v
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Namespace = v
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Name = v
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField4(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	p.Labels = make([]*KeyValuePair, 0, size)
	for i := 0; i < size; i++ {
		_elem := NewKeyValuePair()
		if err := _elem.Read(iprot); err != nil {
			return err
		}

		p.Labels = append(p.Labels, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Description = v
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.CreateTime = v
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.LastScaleTime = v
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.ScaleTarget = v
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField9(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	p.Metrics = make([]string, 0, size)
	for i := 0; i < size; i++ {
		var _elem string
		if v, err := iprot.ReadString(); err != nil {
			return err
		} else {
			_elem = v
		}

		p.Metrics = append(p.Metrics, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField10(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	p.CurrentMetrics = make([]string, 0, size)
	for i := 0; i < size; i++ {
		var _elem string
		if v, err := iprot.ReadString(); err != nil {
			return err
		} else {
			_elem = v
		}

		p.CurrentMetrics = append(p.CurrentMetrics, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		p.MinReplicas = v
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		p.MaxReplicas = v
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) ReadField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		p.CurrentReplicas = v
	}
	return nil
}

func (p *GetHorizontalPodAutoscalerResponse) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("GetHorizontalPodAutoscalerResponse"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
		if err = p.writeField4(oprot); err != nil {
			fieldId = 4
			goto WriteFieldError
		}
		if err = p.writeField5(oprot); err != nil {
			fieldId = 5
			goto WriteFieldError
		}
		if err = p.writeField6(oprot); err != nil {
			fieldId = 6
			goto WriteFieldError
		}
		if err = p.writeField7(oprot); err != nil {
			fieldId = 7
			goto WriteFieldError
		}
		if err = p.writeField8(oprot); err != nil {
			fieldId = 8
			goto WriteFieldError
		}
		if err = p.writeField9(oprot); err != nil {
			fieldId = 9
			goto WriteFieldError
		}
		if err = p.writeField10(oprot); err != nil {
			fieldId = 10
			goto WriteFieldError
		}
		if err = p.writeField11(oprot); err != nil {
			fieldId = 11
			goto WriteFieldError
		}
		if err = p.writeField12(oprot); err != nil {
			fieldId = 12
			goto WriteFieldError
		}
		if err = p.writeField13(oprot); err != nil {
			fieldId = 13
			goto WriteFieldError
		}

	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("ClusterId", thrift.STRING, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.ClusterId); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Namespace", thrift.STRING, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.Namespace); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField3(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Name", thrift.STRING, 3); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.Name); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField4(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Labels", thrift.LIST, 4); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteListBegin(thrift.STRUCT, len(p.Labels)); err != nil {
		return err
	}
	for _, v := range p.Labels {
		if err := v.Write(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetDescription() {
		if err = oprot.WriteFieldBegin("Description", thrift.STRING, 5); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(p.Description); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField6(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("CreateTime", thrift.STRING, 6); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CreateTime); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField7(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("LastScaleTime", thrift.STRING, 7); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.LastScaleTime); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField8(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("ScaleTarget", thrift.STRING, 8); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.ScaleTarget); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField9(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Metrics", thrift.LIST, 9); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteListBegin(thrift.STRING, len(p.Metrics)); err != nil {
		return err
	}
	for _, v := range p.Metrics {
		if err := oprot.WriteString(v); err != nil {
			return err
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField10(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("CurrentMetrics", thrift.LIST, 10); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteListBegin(thrift.STRING, len(p.CurrentMetrics)); err != nil {
		return err
	}
	for _, v := range p.CurrentMetrics {
		if err := oprot.WriteString(v); err != nil {
			return err
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField11(oprot thrift.TProtocol) (err error) {
	if p.IsSetMinReplicas() {
		if err = oprot.WriteFieldBegin("MinReplicas", thrift.I32, 11); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(p.MinReplicas); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 11 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 11 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField12(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("MaxReplicas", thrift.I32, 12); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.MaxReplicas); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 12 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 12 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) writeField13(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("CurrentReplicas", thrift.I32, 13); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.CurrentReplicas); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 13 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 13 end error: ", p), err)
}

func (p *GetHorizontalPodAutoscalerResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetHorizontalPodAutoscalerResponse(%+v)", *p)
}

func (p *GetHorizontalPodAutoscalerResponse) DeepEqual(ano *GetHorizontalPodAutoscalerResponse) bool {
	if p == ano {
		return true
	} else if p == nil || ano == nil {
		return false
	}
	if !p.Field1DeepEqual(ano.ClusterId) {
		return false
	}
	if !p.Field2DeepEqual(ano.Namespace) {
		return false
	}
	if !p.Field3DeepEqual(ano.Name) {
		return false
	}
	if !p.Field4DeepEqual(ano.Labels) {
		return false
	}
	if !p.Field5DeepEqual(ano.Description) {
		return false
	}
	if !p.Field6DeepEqual(ano.CreateTime) {
		return false
	}
	if !p.Field7DeepEqual(ano.LastScaleTime) {
		return false
	}
	if !p.Field8DeepEqual(ano.ScaleTarget) {
		return false
	}
	if !p.Field9DeepEqual(ano.Metrics) {
		return false
	}
	if !p.Field10DeepEqual(ano.CurrentMetrics) {
		return false
	}
	if !p.Field11DeepEqual(ano.MinReplicas) {
		return false
	}
	if !p.Field12DeepEqual(ano.MaxReplicas) {
		return false
	}
	if !p.Field13DeepEqual(ano.CurrentReplicas) {
		return false
	}
	return true
}

func (p *GetHorizontalPodAutoscalerResponse) Field1DeepEqual(src string) bool {

	if strings.Compare(p.ClusterId, src) != 0 {
		return false
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field2DeepEqual(src string) bool {

	if strings.Compare(p.Namespace, src) != 0 {
		return false
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field3DeepEqual(src string) bool {

	if strings.Compare(p.Name, src) != 0 {
		return false
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field4DeepEqual(src []*KeyValuePair) bool {

	if len(p.Labels) != len(src) {
		return false
	}
	for i, v := range p.Labels {
		_src := src[i]
		if !v.DeepEqual(_src) {
			return false
		}
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field5DeepEqual(src string) bool {

	if strings.Compare(p.Description, src) != 0 {
		return false
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field6DeepEqual(src string) bool {

	if strings.Compare(p.CreateTime, src) != 0 {
		return false
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field7DeepEqual(src string) bool {

	if strings.Compare(p.LastScaleTime, src) != 0 {
		return false
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field8DeepEqual(src string) bool {

	if strings.Compare(p.ScaleTarget, src) != 0 {
		return false
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field9DeepEqual(src []string) bool {

	if len(p.Metrics) != len(src) {
		return false
	}
	for i, v := range p.Metrics {
		_src := src[i]
		if strings.Compare(v, _src) != 0 {
			return false
		}
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field10DeepEqual(src []string) bool {

	if len(p.CurrentMetrics) != len(src) {
		return false
	}
	for i, v := range p.CurrentMetrics {
		_src := src[i]
		if strings.Compare(v, _src) != 0 {
			return false
		}
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field11DeepEqual(src int32) bool {

	if p.MinReplicas != src {
		return false
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field12DeepEqual(src int32) bool {

	if p.MaxReplicas != src {
		return false
	}
	return true
}
func (p *GetHorizontalPodAutoscalerResponse) Field13DeepEqual(src int32) bool {

	if p.CurrentReplicas != src {
		return false
	}
	return true
}

type ListHorizontalPodAutoscalersResponse struct {
	Total int64                          `thrift:"Total,1,required" json:"Total"`
	Items []*HorizontalPodAutoscalerItem `thrift:"Items,2,required" json:"Items"`
}

func NewListHorizontalPodAutoscalersResponse() *ListHorizontalPodAutoscalersResponse {
	return &ListHorizontalPodAutoscalersResponse{}
}

func (p *ListHorizontalPodAutoscalersResponse) GetTotal() (v int64) {
	return p.Total
}

func (p *ListHorizontalPodAutoscalersResponse) GetItems() (v []*HorizontalPodAutoscalerItem) {
	return p.Items
}
func (p *ListHorizontalPodAutoscalersResponse) SetTotal(val int64) {
	p.Total = val
}
func (p *ListHorizontalPodAutoscalersResponse) SetItems(val []*HorizontalPodAutoscalerItem) {
	p.Items = val
}

var fieldIDToName_ListHorizontalPodAutoscalersResponse = map[int16]string{
	1: "Total",
	2: "Items",
}

func (p *ListHorizontalPodAutoscalersResponse) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16
	var issetTotal bool = false
	var issetItems bool = false

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.I64 {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
				issetTotal = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 2:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
				issetItems = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}

		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	if !issetTotal {
		fieldId = 1
		goto RequiredFieldNotSetError
	}

	if !issetItems {
		fieldId = 2
		goto RequiredFieldNotSetError
	}
	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_ListHorizontalPodAutoscalersResponse[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
RequiredFieldNotSetError:
	return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field %s is not set", fieldIDToName_ListHorizontalPodAutoscalersResponse[fieldId]))
}

func (p *ListHorizontalPodAutoscalersResponse) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return err
	} else {
		p.Total = v
	}
	return nil
}

func (p *ListHorizontalPodAutoscalersResponse) ReadField2(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	p.Items = make([]*HorizontalPodAutoscalerItem, 0, size)
	for i := 0; i < size; i++ {
		_elem := NewHorizontalPodAutoscalerItem()
		if err := _elem.Read(iprot); err != nil {
			return err
		}

		p.Items = append(p.Items, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	return nil
}

func (p *ListHorizontalPodAutoscalersResponse) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("ListHorizontalPodAutoscalersResponse"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}

	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *ListHorizontalPodAutoscalersResponse) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Total", thrift.I64, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI64(p.Total); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *ListHorizontalPodAutoscalersResponse) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Items", thrift.LIST, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteListBegin(thrift.STRUCT, len(p.Items)); err != nil {
		return err
	}
	for _, v := range p.Items {
		if err := v.Write(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *ListHorizontalPodAutoscalersResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ListHorizontalPodAutoscalersResponse(%+v)", *p)
}

func (p *ListHorizontalPodAutoscalersResponse) DeepEqual(ano *ListHorizontalPodAutoscalersResponse) bool {
	if p == ano {
		return true
	} else if p == nil || ano == nil {
		return false
	}
	if !p.Field1DeepEqual(ano.Total) {
		return false
	}
	if !p.Field2DeepEqual(ano.Items) {
		return false
	}
	return true
}

func (p *ListHorizontalPodAutoscalersResponse) Field1DeepEqual(src int64) bool {

	if p.Total != src {
		return false
	}
	return true
}
func (p *ListHorizontalPodAutoscalersResponse) Field2DeepEqual(src []*HorizontalPodAutoscalerItem) bool {

	if len(p.Items) != len(src) {
		return false
	}
	for i, v := range p.Items {
		_src := src[i]
		if !v.DeepEqual(_src) {
			return false
		}
	}
	return true
}

type HorizontalPodAutoscalerItem struct {
	Namespace   string          `thrift:"Namespace,1,required" from:"metadata.namespace"`
	Name        string          `thrift:"Name,2,required" from:"metadata.name"`
	Labels      []*KeyValuePair `thrift:"Labels,3,required" from:"metadata.labels"`
	Description string          `thrift:"Description,4,required" from:"metadata.annotations.<description>"`
	CreateTime  string          `thrift:"CreateTime,5,required" from:"metadata.creationTimestamp"`
	ScaleTarget string          `thrift:"ScaleTarget,6,required" json:"ScaleTarget"`
	Metrics     []string        `thrift:"Metrics,7,required" json:"Metrics"`
	MinReplicas int32           `thrift:"MinReplicas,8" from:"spec.minReplicas,important"`
	MaxReplicas int32           `thrift:"MaxReplicas,9,required" from:"spec.maxReplicas,important"`
}

func NewHorizontalPodAutoscalerItem() *HorizontalPodAutoscalerItem {
	return &HorizontalPodAutoscalerItem{

		Namespace:   "",
		Name:        "",
		Description: "",
		CreateTime:  "",
		ScaleTarget: "",
		MinReplicas: 0,
		MaxReplicas: 0,
	}
}

func (p *HorizontalPodAutoscalerItem) GetNamespace() (v string) {
	return p.Namespace
}

func (p *HorizontalPodAutoscalerItem) GetName() (v string) {
	return p.Name
}

func (p *HorizontalPodAutoscalerItem) GetLabels() (v []*KeyValuePair) {
	return p.Labels
}

func (p *HorizontalPodAutoscalerItem) GetDescription() (v string) {
	return p.Description
}

func (p *HorizontalPodAutoscalerItem) GetCreateTime() (v string) {
	return p.CreateTime
}

func (p *HorizontalPodAutoscalerItem) GetScaleTarget() (v string) {
	return p.ScaleTarget
}

func (p *HorizontalPodAutoscalerItem) GetMetrics() (v []string) {
	return p.Metrics
}

var HorizontalPodAutoscalerItem_MinReplicas_DEFAULT int32 = 0

func (p *HorizontalPodAutoscalerItem) GetMinReplicas() (v int32) {
	if !p.IsSetMinReplicas() {
		return HorizontalPodAutoscalerItem_MinReplicas_DEFAULT
	}
	return p.MinReplicas
}

func (p *HorizontalPodAutoscalerItem) GetMaxReplicas() (v int32) {
	return p.MaxReplicas
}
func (p *HorizontalPodAutoscalerItem) SetNamespace(val string) {
	p.Namespace = val
}
func (p *HorizontalPodAutoscalerItem) SetName(val string) {
	p.Name = val
}
func (p *HorizontalPodAutoscalerItem) SetLabels(val []*KeyValuePair) {
	p.Labels = val
}
func (p *HorizontalPodAutoscalerItem) SetDescription(val string) {
	p.Description = val
}
func (p *HorizontalPodAutoscalerItem) SetCreateTime(val string) {
	p.CreateTime = val
}
func (p *HorizontalPodAutoscalerItem) SetScaleTarget(val string) {
	p.ScaleTarget = val
}
func (p *HorizontalPodAutoscalerItem) SetMetrics(val []string) {
	p.Metrics = val
}
func (p *HorizontalPodAutoscalerItem) SetMinReplicas(val int32) {
	p.MinReplicas = val
}
func (p *HorizontalPodAutoscalerItem) SetMaxReplicas(val int32) {
	p.MaxReplicas = val
}

var fieldIDToName_HorizontalPodAutoscalerItem = map[int16]string{
	1: "Namespace",
	2: "Name",
	3: "Labels",
	4: "Description",
	5: "CreateTime",
	6: "ScaleTarget",
	7: "Metrics",
	8: "MinReplicas",
	9: "MaxReplicas",
}

func (p *HorizontalPodAutoscalerItem) IsSetMinReplicas() bool {
	return p.MinReplicas != HorizontalPodAutoscalerItem_MinReplicas_DEFAULT
}

func (p *HorizontalPodAutoscalerItem) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16
	var issetNamespace bool = false
	var issetName bool = false
	var issetLabels bool = false
	var issetDescription bool = false
	var issetCreateTime bool = false
	var issetScaleTarget bool = false
	var issetMetrics bool = false
	var issetMaxReplicas bool = false

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
				issetNamespace = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
				issetName = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 3:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
				issetLabels = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 4:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField4(iprot); err != nil {
					goto ReadFieldError
				}
				issetDescription = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 5:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField5(iprot); err != nil {
					goto ReadFieldError
				}
				issetCreateTime = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 6:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField6(iprot); err != nil {
					goto ReadFieldError
				}
				issetScaleTarget = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 7:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField7(iprot); err != nil {
					goto ReadFieldError
				}
				issetMetrics = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 8:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField8(iprot); err != nil {
					goto ReadFieldError
				}
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 9:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField9(iprot); err != nil {
					goto ReadFieldError
				}
				issetMaxReplicas = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}

		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	if !issetNamespace {
		fieldId = 1
		goto RequiredFieldNotSetError
	}

	if !issetName {
		fieldId = 2
		goto RequiredFieldNotSetError
	}

	if !issetLabels {
		fieldId = 3
		goto RequiredFieldNotSetError
	}

	if !issetDescription {
		fieldId = 4
		goto RequiredFieldNotSetError
	}

	if !issetCreateTime {
		fieldId = 5
		goto RequiredFieldNotSetError
	}

	if !issetScaleTarget {
		fieldId = 6
		goto RequiredFieldNotSetError
	}

	if !issetMetrics {
		fieldId = 7
		goto RequiredFieldNotSetError
	}

	if !issetMaxReplicas {
		fieldId = 9
		goto RequiredFieldNotSetError
	}
	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_HorizontalPodAutoscalerItem[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
RequiredFieldNotSetError:
	return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field %s is not set", fieldIDToName_HorizontalPodAutoscalerItem[fieldId]))
}

func (p *HorizontalPodAutoscalerItem) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Namespace = v
	}
	return nil
}

func (p *HorizontalPodAutoscalerItem) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Name = v
	}
	return nil
}

func (p *HorizontalPodAutoscalerItem) ReadField3(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	p.Labels = make([]*KeyValuePair, 0, size)
	for i := 0; i < size; i++ {
		_elem := NewKeyValuePair()
		if err := _elem.Read(iprot); err != nil {
			return err
		}

		p.Labels = append(p.Labels, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	return nil
}

func (p *HorizontalPodAutoscalerItem) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Description = v
	}
	return nil
}

func (p *HorizontalPodAutoscalerItem) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.CreateTime = v
	}
	return nil
}

func (p *HorizontalPodAutoscalerItem) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.ScaleTarget = v
	}
	return nil
}

func (p *HorizontalPodAutoscalerItem) ReadField7(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	p.Metrics = make([]string, 0, size)
	for i := 0; i < size; i++ {
		var _elem string
		if v, err := iprot.ReadString(); err != nil {
			return err
		} else {
			_elem = v
		}

		p.Metrics = append(p.Metrics, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	return nil
}

func (p *HorizontalPodAutoscalerItem) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		p.MinReplicas = v
	}
	return nil
}

func (p *HorizontalPodAutoscalerItem) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		p.MaxReplicas = v
	}
	return nil
}

func (p *HorizontalPodAutoscalerItem) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("HorizontalPodAutoscalerItem"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
		if err = p.writeField4(oprot); err != nil {
			fieldId = 4
			goto WriteFieldError
		}
		if err = p.writeField5(oprot); err != nil {
			fieldId = 5
			goto WriteFieldError
		}
		if err = p.writeField6(oprot); err != nil {
			fieldId = 6
			goto WriteFieldError
		}
		if err = p.writeField7(oprot); err != nil {
			fieldId = 7
			goto WriteFieldError
		}
		if err = p.writeField8(oprot); err != nil {
			fieldId = 8
			goto WriteFieldError
		}
		if err = p.writeField9(oprot); err != nil {
			fieldId = 9
			goto WriteFieldError
		}

	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *HorizontalPodAutoscalerItem) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Namespace", thrift.STRING, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.Namespace); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *HorizontalPodAutoscalerItem) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Name", thrift.STRING, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.Name); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *HorizontalPodAutoscalerItem) writeField3(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Labels", thrift.LIST, 3); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteListBegin(thrift.STRUCT, len(p.Labels)); err != nil {
		return err
	}
	for _, v := range p.Labels {
		if err := v.Write(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *HorizontalPodAutoscalerItem) writeField4(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Description", thrift.STRING, 4); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.Description); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 end error: ", p), err)
}

func (p *HorizontalPodAutoscalerItem) writeField5(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("CreateTime", thrift.STRING, 5); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.CreateTime); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 end error: ", p), err)
}

func (p *HorizontalPodAutoscalerItem) writeField6(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("ScaleTarget", thrift.STRING, 6); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.ScaleTarget); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 end error: ", p), err)
}

func (p *HorizontalPodAutoscalerItem) writeField7(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Metrics", thrift.LIST, 7); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteListBegin(thrift.STRING, len(p.Metrics)); err != nil {
		return err
	}
	for _, v := range p.Metrics {
		if err := oprot.WriteString(v); err != nil {
			return err
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 end error: ", p), err)
}

func (p *HorizontalPodAutoscalerItem) writeField8(oprot thrift.TProtocol) (err error) {
	if p.IsSetMinReplicas() {
		if err = oprot.WriteFieldBegin("MinReplicas", thrift.I32, 8); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(p.MinReplicas); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 end error: ", p), err)
}

func (p *HorizontalPodAutoscalerItem) writeField9(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("MaxReplicas", thrift.I32, 9); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.MaxReplicas); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 end error: ", p), err)
}

func (p *HorizontalPodAutoscalerItem) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HorizontalPodAutoscalerItem(%+v)", *p)
}

func (p *HorizontalPodAutoscalerItem) DeepEqual(ano *HorizontalPodAutoscalerItem) bool {
	if p == ano {
		return true
	} else if p == nil || ano == nil {
		return false
	}
	if !p.Field1DeepEqual(ano.Namespace) {
		return false
	}
	if !p.Field2DeepEqual(ano.Name) {
		return false
	}
	if !p.Field3DeepEqual(ano.Labels) {
		return false
	}
	if !p.Field4DeepEqual(ano.Description) {
		return false
	}
	if !p.Field5DeepEqual(ano.CreateTime) {
		return false
	}
	if !p.Field6DeepEqual(ano.ScaleTarget) {
		return false
	}
	if !p.Field7DeepEqual(ano.Metrics) {
		return false
	}
	if !p.Field8DeepEqual(ano.MinReplicas) {
		return false
	}
	if !p.Field9DeepEqual(ano.MaxReplicas) {
		return false
	}
	return true
}

func (p *HorizontalPodAutoscalerItem) Field1DeepEqual(src string) bool {

	if strings.Compare(p.Namespace, src) != 0 {
		return false
	}
	return true
}
func (p *HorizontalPodAutoscalerItem) Field2DeepEqual(src string) bool {

	if strings.Compare(p.Name, src) != 0 {
		return false
	}
	return true
}
func (p *HorizontalPodAutoscalerItem) Field3DeepEqual(src []*KeyValuePair) bool {

	if len(p.Labels) != len(src) {
		return false
	}
	for i, v := range p.Labels {
		_src := src[i]
		if !v.DeepEqual(_src) {
			return false
		}
	}
	return true
}
func (p *HorizontalPodAutoscalerItem) Field4DeepEqual(src string) bool {

	if strings.Compare(p.Description, src) != 0 {
		return false
	}
	return true
}
func (p *HorizontalPodAutoscalerItem) Field5DeepEqual(src string) bool {

	if strings.Compare(p.CreateTime, src) != 0 {
		return false
	}
	return true
}
func (p *HorizontalPodAutoscalerItem) Field6DeepEqual(src string) bool {

	if strings.Compare(p.ScaleTarget, src) != 0 {
		return false
	}
	return true
}
func (p *HorizontalPodAutoscalerItem) Field7DeepEqual(src []string) bool {

	if len(p.Metrics) != len(src) {
		return false
	}
	for i, v := range p.Metrics {
		_src := src[i]
		if strings.Compare(v, _src) != 0 {
			return false
		}
	}
	return true
}
func (p *HorizontalPodAutoscalerItem) Field8DeepEqual(src int32) bool {

	if p.MinReplicas != src {
		return false
	}
	return true
}
func (p *HorizontalPodAutoscalerItem) Field9DeepEqual(src int32) bool {

	if p.MaxReplicas != src {
		return false
	}
	return true
}

type CreateHorizontalPodAutoscalerRequest struct {
	ClusterId   string          `thrift:"ClusterId,1,required" json:"ClusterId"`
	Namespace   string          `thrift:"Namespace,2,required" from:"metadata.namespace"`
	Name        string          `thrift:"Name,3,required" from:"metadata.name"`
	Labels      []*KeyValuePair `thrift:"Labels,4" from:"metadata.labels"`
	Description string          `thrift:"Description,5" from:"metadata.annotations.<description>,important"`
	ScaleTarget string          `thrift:"ScaleTarget,8,required" json:"ScaleTarget"`
	Metrics     []string        `thrift:"Metrics,9,required" json:"Metrics"`
	MinReplicas int32           `thrift:"MinReplicas,10,required" from:"spec.minReplicas"`
	MaxReplicas int32           `thrift:"MaxReplicas,11,required" from:"spec.maxReplicas"`
	Top         *base.TopParam  `thrift:"Top,255,required" json:"Top"`
}

func NewCreateHorizontalPodAutoscalerRequest() *CreateHorizontalPodAutoscalerRequest {
	return &CreateHorizontalPodAutoscalerRequest{

		ClusterId:   "",
		Namespace:   "",
		Name:        "",
		Description: "",
		ScaleTarget: "",
		MinReplicas: 0,
		MaxReplicas: 0,
	}
}

func (p *CreateHorizontalPodAutoscalerRequest) GetClusterId() (v string) {
	return p.ClusterId
}

func (p *CreateHorizontalPodAutoscalerRequest) GetNamespace() (v string) {
	return p.Namespace
}

func (p *CreateHorizontalPodAutoscalerRequest) GetName() (v string) {
	return p.Name
}

var CreateHorizontalPodAutoscalerRequest_Labels_DEFAULT []*KeyValuePair

func (p *CreateHorizontalPodAutoscalerRequest) GetLabels() (v []*KeyValuePair) {
	if !p.IsSetLabels() {
		return CreateHorizontalPodAutoscalerRequest_Labels_DEFAULT
	}
	return p.Labels
}

var CreateHorizontalPodAutoscalerRequest_Description_DEFAULT string = ""

func (p *CreateHorizontalPodAutoscalerRequest) GetDescription() (v string) {
	if !p.IsSetDescription() {
		return CreateHorizontalPodAutoscalerRequest_Description_DEFAULT
	}
	return p.Description
}

func (p *CreateHorizontalPodAutoscalerRequest) GetScaleTarget() (v string) {
	return p.ScaleTarget
}

func (p *CreateHorizontalPodAutoscalerRequest) GetMetrics() (v []string) {
	return p.Metrics
}

func (p *CreateHorizontalPodAutoscalerRequest) GetMinReplicas() (v int32) {
	return p.MinReplicas
}

func (p *CreateHorizontalPodAutoscalerRequest) GetMaxReplicas() (v int32) {
	return p.MaxReplicas
}

var CreateHorizontalPodAutoscalerRequest_Top_DEFAULT *base.TopParam

func (p *CreateHorizontalPodAutoscalerRequest) GetTop() (v *base.TopParam) {
	if !p.IsSetTop() {
		return CreateHorizontalPodAutoscalerRequest_Top_DEFAULT
	}
	return p.Top
}
func (p *CreateHorizontalPodAutoscalerRequest) SetClusterId(val string) {
	p.ClusterId = val
}
func (p *CreateHorizontalPodAutoscalerRequest) SetNamespace(val string) {
	p.Namespace = val
}
func (p *CreateHorizontalPodAutoscalerRequest) SetName(val string) {
	p.Name = val
}
func (p *CreateHorizontalPodAutoscalerRequest) SetLabels(val []*KeyValuePair) {
	p.Labels = val
}
func (p *CreateHorizontalPodAutoscalerRequest) SetDescription(val string) {
	p.Description = val
}
func (p *CreateHorizontalPodAutoscalerRequest) SetScaleTarget(val string) {
	p.ScaleTarget = val
}
func (p *CreateHorizontalPodAutoscalerRequest) SetMetrics(val []string) {
	p.Metrics = val
}
func (p *CreateHorizontalPodAutoscalerRequest) SetMinReplicas(val int32) {
	p.MinReplicas = val
}
func (p *CreateHorizontalPodAutoscalerRequest) SetMaxReplicas(val int32) {
	p.MaxReplicas = val
}
func (p *CreateHorizontalPodAutoscalerRequest) SetTop(val *base.TopParam) {
	p.Top = val
}

var fieldIDToName_CreateHorizontalPodAutoscalerRequest = map[int16]string{
	1:   "ClusterId",
	2:   "Namespace",
	3:   "Name",
	4:   "Labels",
	5:   "Description",
	8:   "ScaleTarget",
	9:   "Metrics",
	10:  "MinReplicas",
	11:  "MaxReplicas",
	255: "Top",
}

func (p *CreateHorizontalPodAutoscalerRequest) IsSetLabels() bool {
	return p.Labels != nil
}

func (p *CreateHorizontalPodAutoscalerRequest) IsSetDescription() bool {
	return p.Description != CreateHorizontalPodAutoscalerRequest_Description_DEFAULT
}

func (p *CreateHorizontalPodAutoscalerRequest) IsSetTop() bool {
	return p.Top != nil
}

func (p *CreateHorizontalPodAutoscalerRequest) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16
	var issetClusterId bool = false
	var issetNamespace bool = false
	var issetName bool = false
	var issetScaleTarget bool = false
	var issetMetrics bool = false
	var issetMinReplicas bool = false
	var issetMaxReplicas bool = false
	var issetTop bool = false

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
				issetClusterId = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
				issetNamespace = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 3:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
				issetName = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 4:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField4(iprot); err != nil {
					goto ReadFieldError
				}
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 5:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField5(iprot); err != nil {
					goto ReadFieldError
				}
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 8:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField8(iprot); err != nil {
					goto ReadFieldError
				}
				issetScaleTarget = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 9:
			if fieldTypeId == thrift.LIST {
				if err = p.ReadField9(iprot); err != nil {
					goto ReadFieldError
				}
				issetMetrics = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 10:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField10(iprot); err != nil {
					goto ReadFieldError
				}
				issetMinReplicas = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 11:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField11(iprot); err != nil {
					goto ReadFieldError
				}
				issetMaxReplicas = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		case 255:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField255(iprot); err != nil {
					goto ReadFieldError
				}
				issetTop = true
			} else {
				if err = iprot.Skip(fieldTypeId); err != nil {
					goto SkipFieldError
				}
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}

		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	if !issetClusterId {
		fieldId = 1
		goto RequiredFieldNotSetError
	}

	if !issetNamespace {
		fieldId = 2
		goto RequiredFieldNotSetError
	}

	if !issetName {
		fieldId = 3
		goto RequiredFieldNotSetError
	}

	if !issetScaleTarget {
		fieldId = 8
		goto RequiredFieldNotSetError
	}

	if !issetMetrics {
		fieldId = 9
		goto RequiredFieldNotSetError
	}

	if !issetMinReplicas {
		fieldId = 10
		goto RequiredFieldNotSetError
	}

	if !issetMaxReplicas {
		fieldId = 11
		goto RequiredFieldNotSetError
	}

	if !issetTop {
		fieldId = 255
		goto RequiredFieldNotSetError
	}
	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CreateHorizontalPodAutoscalerRequest[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
RequiredFieldNotSetError:
	return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field %s is not set", fieldIDToName_CreateHorizontalPodAutoscalerRequest[fieldId]))
}

func (p *CreateHorizontalPodAutoscalerRequest) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.ClusterId = v
	}
	return nil
}

func (p *CreateHorizontalPodAutoscalerRequest) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Namespace = v
	}
	return nil
}

func (p *CreateHorizontalPodAutoscalerRequest) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Name = v
	}
	return nil
}

func (p *CreateHorizontalPodAutoscalerRequest) ReadField4(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	p.Labels = make([]*KeyValuePair, 0, size)
	for i := 0; i < size; i++ {
		_elem := NewKeyValuePair()
		if err := _elem.Read(iprot); err != nil {
			return err
		}

		p.Labels = append(p.Labels, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	return nil
}

func (p *CreateHorizontalPodAutoscalerRequest) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Description = v
	}
	return nil
}

func (p *CreateHorizontalPodAutoscalerRequest) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.ScaleTarget = v
	}
	return nil
}

func (p *CreateHorizontalPodAutoscalerRequest) ReadField9(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return err
	}
	p.Metrics = make([]string, 0, size)
	for i := 0; i < size; i++ {
		var _elem string
		if v, err := iprot.ReadString(); err != nil {
			return err
		} else {
			_elem = v
		}

		p.Metrics = append(p.Metrics, _elem)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return err
	}
	return nil
}

func (p *CreateHorizontalPodAutoscalerRequest) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		p.MinReplicas = v
	}
	return nil
}

func (p *CreateHorizontalPodAutoscalerRequest) ReadField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		p.MaxReplicas = v
	}
	return nil
}

func (p *CreateHorizontalPodAutoscalerRequest) ReadField255(iprot thrift.TProtocol) error {
	p.Top = base.NewTopParam()
	if err := p.Top.Read(iprot); err != nil {
		return err
	}
	return nil
}

func (p *CreateHorizontalPodAutoscalerRequest) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("CreateHorizontalPodAutoscalerRequest"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
		if err = p.writeField4(oprot); err != nil {
			fieldId = 4
			goto WriteFieldError
		}
		if err = p.writeField5(oprot); err != nil {
			fieldId = 5
			goto WriteFieldError
		}
		if err = p.writeField8(oprot); err != nil {
			fieldId = 8
			goto WriteFieldError
		}
		if err = p.writeField9(oprot); err != nil {
			fieldId = 9
			goto WriteFieldError
		}
		if err = p.writeField10(oprot); err != nil {
			fieldId = 10
			goto WriteFieldError
		}
		if err = p.writeField11(oprot); err != nil {
			fieldId = 11
			goto WriteFieldError
		}
		if err = p.writeField255(oprot); err != nil {
			fieldId = 255
			goto WriteFieldError
		}

	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("ClusterId", thrift.STRING, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.ClusterId); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) writeField2(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Namespace", thrift.STRING, 2); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.Namespace); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) writeField3(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Name", thrift.STRING, 3); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.Name); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetLabels() {
		if err = oprot.WriteFieldBegin("Labels", thrift.LIST, 4); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteListBegin(thrift.STRUCT, len(p.Labels)); err != nil {
			return err
		}
		for _, v := range p.Labels {
			if err := v.Write(oprot); err != nil {
				return err
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetDescription() {
		if err = oprot.WriteFieldBegin("Description", thrift.STRING, 5); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(p.Description); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) writeField8(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("ScaleTarget", thrift.STRING, 8); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteString(p.ScaleTarget); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) writeField9(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Metrics", thrift.LIST, 9); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteListBegin(thrift.STRING, len(p.Metrics)); err != nil {
		return err
	}
	for _, v := range p.Metrics {
		if err := oprot.WriteString(v); err != nil {
			return err
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) writeField10(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("MinReplicas", thrift.I32, 10); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.MinReplicas); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) writeField11(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("MaxReplicas", thrift.I32, 11); err != nil {
		goto WriteFieldBeginError
	}
	if err := oprot.WriteI32(p.MaxReplicas); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 11 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 11 end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) writeField255(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("Top", thrift.STRUCT, 255); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Top.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 255 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 255 end error: ", p), err)
}

func (p *CreateHorizontalPodAutoscalerRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateHorizontalPodAutoscalerRequest(%+v)", *p)
}

func (p *CreateHorizontalPodAutoscalerRequest) DeepEqual(ano *CreateHorizontalPodAutoscalerRequest) bool {
	if p == ano {
		return true
	} else if p == nil || ano == nil {
		return false
	}
	if !p.Field1DeepEqual(ano.ClusterId) {
		return false
	}
	if !p.Field2DeepEqual(ano.Namespace) {
		return false
	}
	if !p.Field3DeepEqual(ano.Name) {
		return false
	}
	if !p.Field4DeepEqual(ano.Labels) {
		return false
	}
	if !p.Field5DeepEqual(ano.Description) {
		return false
	}
	if !p.Field8DeepEqual(ano.ScaleTarget) {
		return false
	}
	if !p.Field9DeepEqual(ano.Metrics) {
		return false
	}
	if !p.Field10DeepEqual(ano.MinReplicas) {
		return false
	}
	if !p.Field11DeepEqual(ano.MaxReplicas) {
		return false
	}
	if !p.Field255DeepEqual(ano.Top) {
		return false
	}
	return true
}

func (p *CreateHorizontalPodAutoscalerRequest) Field1DeepEqual(src string) bool {

	if strings.Compare(p.ClusterId, src) != 0 {
		return false
	}
	return true
}
func (p *CreateHorizontalPodAutoscalerRequest) Field2DeepEqual(src string) bool {

	if strings.Compare(p.Namespace, src) != 0 {
		return false
	}
	return true
}
func (p *CreateHorizontalPodAutoscalerRequest) Field3DeepEqual(src string) bool {

	if strings.Compare(p.Name, src) != 0 {
		return false
	}
	return true
}
func (p *CreateHorizontalPodAutoscalerRequest) Field4DeepEqual(src []*KeyValuePair) bool {

	if len(p.Labels) != len(src) {
		return false
	}
	for i, v := range p.Labels {
		_src := src[i]
		if !v.DeepEqual(_src) {
			return false
		}
	}
	return true
}
func (p *CreateHorizontalPodAutoscalerRequest) Field5DeepEqual(src string) bool {

	if strings.Compare(p.Description, src) != 0 {
		return false
	}
	return true
}
func (p *CreateHorizontalPodAutoscalerRequest) Field8DeepEqual(src string) bool {

	if strings.Compare(p.ScaleTarget, src) != 0 {
		return false
	}
	return true
}
func (p *CreateHorizontalPodAutoscalerRequest) Field9DeepEqual(src []string) bool {

	if len(p.Metrics) != len(src) {
		return false
	}
	for i, v := range p.Metrics {
		_src := src[i]
		if strings.Compare(v, _src) != 0 {
			return false
		}
	}
	return true
}
func (p *CreateHorizontalPodAutoscalerRequest) Field10DeepEqual(src int32) bool {

	if p.MinReplicas != src {
		return false
	}
	return true
}
func (p *CreateHorizontalPodAutoscalerRequest) Field11DeepEqual(src int32) bool {

	if p.MaxReplicas != src {
		return false
	}
	return true
}
func (p *CreateHorizontalPodAutoscalerRequest) Field255DeepEqual(src *base.TopParam) bool {

	if !p.Top.DeepEqual(src) {
		return false
	}
	return true
}
